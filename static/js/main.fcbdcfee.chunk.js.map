{"version":3,"sources":["components/Signout.js","components/Signin.js","components/Register.js","components/Header.js","components/InputField.js","components/Chore.js","components/Chores.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Signout","onSignout","className","style","display","justifyContent","onClick","to","Signin","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSignin","state","includes","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","name","onLoadUser","alert","catch","err","id","htmlFor","type","onChange","this","Component","Register","onNameChange","registerName","registerEmail","registerPassword","onRegister","user","Header","number","InputField","onContentChange","onDateChange","onAddTask","Chore","date","content","onDone","color","convertedTime","Date","setDate","getDate","formattedTime","toString","split","slice","join","tomorrow","nextWeek","Chores","choreList","map","chore","task","initialState","signedin","todos","App","updateTodoState","Array","isArray","time","exact","path","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcbdcfee.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Signout = ({onSignout}) => {\r\n\treturn (\r\n\t\t<Link className='pr3 link dim underline pointer f3' \r\n\t\t\t style={{display: 'flex', justifyContent: 'flex-end'}}\r\n\t\t\t onClick={onSignout}\r\n\t\t\t to=\"/\">\r\n\t\t\t Sign Out </Link>\r\n\r\n\t);\r\n};\r\n\r\nexport default Signout;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Signin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      signInEmail: '',\r\n      signInPassword: ''\r\n    };\r\n  }\r\n  \r\n  onEmailChange = (event) => {\r\n    this.setState({signInEmail: event.target.value});\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({signInPassword: event.target.value});\r\n  };\r\n\r\n  onSignin = (event) => {\r\n    if (!this.state.signInPassword || !(this.state.signInEmail.includes('@'))) {\r\n      alert('Please fill out form.')\r\n    } else {\r\n      fetch('https://whispering-forest-93215.herokuapp.com/signin', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          email: this.state.signInEmail,\r\n          password: this.state.signInPassword\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        if (data.name) {\r\n          this.props.onLoadUser(data);\r\n        }\r\n        else {\r\n          alert(data);\r\n        }\r\n      })\r\n      .catch(err => alert(\"Error registering.\"))\r\n    }\r\n}\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br2 shadow-5 dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n          <main className=\"pa4 black-80 center\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input className=\"pa2 input-reset bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"email\" \r\n                  name=\"email-address\"  \r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input className=\"b pa2 input-reset bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"password\" \r\n                  name=\"password\"  \r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}/>\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"b ph3 pv2 input-reset center b--black bg-transparent grow pointer f6 dib\">\r\n                <Link to=\"/\" onClick={this.onSignin}>Sign In</Link>\r\n              </div>\r\n              <div className=\"lh-copy mt3 center\">\r\n                <Link to=\"/register\" className=\"f6 center link dim black db pointer\">Register</Link>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;","import React , {Component}from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state= {\r\n      registerName: '',\r\n      registerEmail: '',\r\n      registerPassword: '',\r\n    }\r\n  };\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({registerName: event.target.value});\r\n  };\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({registerEmail: event.target.value});\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({registerPassword: event.target.value});\r\n  };\r\n\r\n  onRegister = (event) => {\r\n    if (!this.state.registerPassword || !this.state.registerName || !(this.state.registerEmail.includes('@'))) {\r\n      alert('Please fill out form.')\r\n    } else {\r\n      fetch('https://whispering-forest-93215.herokuapp.com/register', {\r\n        method: 'post',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          email: this.state.registerEmail,\r\n          name: this.state.registerName,\r\n          password: this.state.registerPassword\r\n        })\r\n      })\r\n      .then(response => response.json())\r\n      .then(user => {\r\n        if (user.name) {\r\n          this.props.onLoadUser(user);\r\n        }\r\n        else {\r\n          alert(user);\r\n        }\r\n\r\n      })\r\n      .catch(err => alert(\"Error registering.\"))\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br2 dark-gray shadow-5 b--black-10 mv4 w-100 w-50-m w-25-l mw5 center\">\r\n          <main className=\"pa4 black-80 center\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\" b--transparent ph0 mh0\">\r\n                <legend className=\"f4 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                  <input className=\"b pa2 input-reset  bg-transparent hover-bg-black hover-white w-100\"\r\n                   type=\"text\" \r\n                   name=\"name\"  \r\n                   id=\"name\"\r\n                   onChange={this.onNameChange}/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                  <input className=\"pa2 input-reset  bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"email\" \r\n                  name=\"email-address\"  \r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}/>\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                  <input className=\"b pa2 input-reset  bg-transparent hover-bg-black hover-white w-100\" \r\n                  type=\"password\" \r\n                  name=\"password\"  \r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}/>\r\n                </div>\r\n              </fieldset>\r\n              <div className=\"b ph3 pv2 input-reset center b--black bg-transparent grow pointer f6 dib\">\r\n                <Link to=\"/register\" onClick={this.onRegister}>Register</Link>\r\n              </div>\r\n              <div className=\"lh-copy mt3 center\">\r\n                <Link to=\"/\" className=\"f6 center link dim black db pointer\">Sign in</Link>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Register;","import React from 'react';\r\n\r\nconst Header = ({name, number}) => {\r\n\treturn (\r\n\t\t<p className='center'>{`${name}, you have ${number} todos.`}</p>\r\n\t);\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst InputField = ({onContentChange, onDateChange, onAddTask}) => {\r\n  return (\r\n    <>\r\n      <p className='center general-text'>Enter todo and deadline: (Time defaults to end of selected day)</p>\r\n      <div className='center'>\r\n        <input className='f4 mr1' type='text' onChange={onContentChange}/>\r\n        <input className='f4 ml1' type='date' onChange={onDateChange}/>\r\n        <button className='w-5 ml3 grow bg-light-blue'\r\n          onClick={onAddTask}>\r\n          Add Task</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputField;","import React from 'react';\r\n\r\nconst Chore = ({date, content, onDone}) => {\r\n\r\n\tconst color = (date) => {\r\n\t\tvar convertedTime = new Date(date);\r\n\t\tconvertedTime.setDate(convertedTime.getDate() + 1);\r\n\t\tconst formattedTime = convertedTime.toString().split(\" \").slice(1, 4).join(\" \");\r\n\t\tvar tomorrow = new Date();\r\n\t\ttomorrow.setDate(tomorrow.getDate() + 1);\r\n\t\tvar nextWeek = new Date();\r\n\t\tnextWeek.setDate(nextWeek.getDate() + 7);\r\n\t\tif (convertedTime < tomorrow) {\r\n\t\t\treturn ['bg-red', formattedTime];\r\n\t\t} else if (convertedTime < nextWeek) {\r\n\t\t\treturn ['bg-orange', formattedTime];\r\n\t\t} else {\r\n\t\t\treturn ['bg-green', formattedTime];\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='mv3 w-70-ns w-90 center'>\r\n\t\t\t<p className={`w-50-ns w-60 ${color(date)[0]} pv3 b`}>{`${content} by ${color(date)[1]}`}</p>\r\n\t\t\t<button className='w-10-ns w-30 ml3 mv3 grow bg-light-blue'\r\n\t\t\tonClick={() => onDone(date, content)}\r\n\t\t\t>Done ✅</button>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chore;","import React from 'react';\r\nimport Chore from './Chore';\r\n\r\nconst Chores = ({choreList, onDone}) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{choreList.map(chore => \r\n\t\t\t\t(<Chore date={chore.date}\r\n\t\t\t\tcontent={chore.task}\r\n\t\t\t\tonDone={onDone}/>))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chores;","import React, {Component} from 'react';\r\nimport { Switch, Route, Redirect} from 'react-router-dom';\r\nimport Signout from '../components/Signout';\r\nimport Signin from '../components/Signin';\r\nimport Register from '../components/Register';\r\nimport Header from '../components/Header';\r\nimport InputField from '../components/InputField';\r\nimport Chores from '../components/Chores';\r\nconst initialState = \r\n{\r\n  signedin: false,\r\n  content: '',\r\n  date: '',\r\n  user: {\r\n    name: '',\r\n    email: '',\r\n    todos: \r\n    []\r\n  }\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state= initialState;\r\n  };\r\n\r\n  onSignout = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  onLoadUser = (data) => {\r\n    this.setState({user: {\r\n      name: data.name,\r\n      email: data.email,\r\n      todos: data.todos ? data.todos : []\r\n    },\r\n    signedin: true})\r\n  };\r\n\r\n  onContentChange = (event) => {\r\n    this.setState({content: event.target.value});\r\n  };\r\n\r\n  onDateChange = (event) => {\r\n    this.setState({date: event.target.value});\r\n  };\r\n\r\n  updateTodoState = (data) => {\r\n    if (Array.isArray(data)) {\r\n      this.setState({user: {\r\n        email: this.state.user.email,\r\n        name: this.state.user.name,\r\n        todos: data}})\r\n    }\r\n    else {\r\n      alert(data);\r\n    }\r\n  };\r\n\r\n  onAddTask = () => {\r\n    var date = new Date(this.state.date);\r\n    date.setDate(date.getDate() + 1);\r\n    fetch('https://whispering-forest-93215.herokuapp.com/updatedb', {\r\n      method: 'put',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.user.email,\r\n        task: this.state.content,\r\n        date: this.state.date\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => this.updateTodoState(data))\r\n    .catch(err => alert(\"Error adding task\"))\r\n  };\r\n\r\n  onDone = (time, content) => {\r\n    fetch('https://whispering-forest-93215.herokuapp.com/deletefromdb', {\r\n      method: 'put',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        email: this.state.user.email,\r\n        task: content,\r\n        date: time\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => this.updateTodoState(data))\r\n    .catch(err => alert(\"Error deleting task\"))\r\n  };\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            {this.state.signedin ? <Redirect to=\"/signedin\"/> : <Signin onLoadUser={this.onLoadUser}/>}\r\n          </Route>\r\n          <Route path=\"/register\">\r\n            {this.state.signedin ? <Redirect to=\"/signedin\"/> : <Register onLoadUser={this.onLoadUser}/>}\r\n          </Route>\r\n          <Route path=\"/signedin\">\r\n            <div>\r\n              <Signout onSignout={this.onSignout}/>\r\n              <Header name={this.state.user.name} number={this.state.user.todos.length}/>\r\n              <InputField onContentChange={this.onContentChange}\r\n              onDateChange={this.onDateChange}\r\n              onAddTask={this.onAddTask}/>\r\n              <Chores choreList={this.state.user.todos} onDone={this.onDone}/>\r\n            </div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport {HashRouter as Router} from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}